name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux builds
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: cacheclip
            asset_name: cacheclip-${{ github.ref_name }}-x86_64-linux.tar.gz
            cross: false
            
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: cacheclip
            asset_name: cacheclip-${{ github.ref_name }}-arm64-linux.tar.gz
            cross: true
          
          # macOS builds
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: cacheclip
            asset_name: cacheclip-${{ github.ref_name }}-x86_64-macos.tar.gz
            cross: false
            
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: cacheclip
            asset_name: cacheclip-${{ github.ref_name }}-arm64-macos.tar.gz
            cross: false
          
          # Windows builds
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: cacheclip.exe
            asset_name: cacheclip-${{ github.ref_name }}-x86_64-windows.zip
            cross: false
            
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            artifact_name: cacheclip.exe
            asset_name: cacheclip-${{ github.ref_name }}-arm64-windows.zip
            cross: false

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      
      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libxcb1-dev \
            libxcb-render0-dev \
            libxcb-shape0-dev \
            libxcb-xfixes0-dev \
            libx11-dev \
            python3 \
            python3-pip
          if [ "${{ matrix.cross }}" = "true" ]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu
          fi

      - name: Build with cargo
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
          use-cross: ${{ matrix.cross }}
      
      - name: Create archive (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          tar -C target/${{ matrix.target }}/release -czf ${{ matrix.asset_name }} ${{ matrix.artifact_name }}
      
      - name: Create archive (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          Compress-Archive -Path target/${{ matrix.target }}/release/${{ matrix.artifact_name }} -DestinationPath ${{ matrix.asset_name }}
      
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.asset_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}